import{j as n,i as I,f as P,u as M,r as s,c as z,l as q}from"./index-C_tbM6aH.js";const B=({content:u,onContentChange:a,isOpen:m,theme:r})=>{const f=`notepad-container ${m?"open":""} ${r}`;return n.jsxs("div",{className:f,children:[n.jsx("h3",{className:"notepad-header",children:"Shared Notes"}),n.jsx("textarea",{value:u,onChange:d=>a(d.target.value),placeholder:"Type your shared notes here...",className:"notepad-textarea"})]})},F=({startTime:u})=>{const[a,m]=s.useState(0);s.useEffect(()=>{const g=setInterval(()=>{m(Date.now()-u)},1e3);return()=>clearInterval(g)},[u]);const r=Math.floor(a/1e3),f=Math.floor(r/60),d=r%60;let h="text-green-500";return f>=45&&(h="text-yellow-500"),f>=55&&(h="text-red-500"),n.jsxs("div",{className:`font-mono text-lg font-bold ${h}`,children:[String(f).padStart(2,"0"),":",String(d).padStart(2,"0")]})},J=()=>{const{theme:u}=I(),{sessionId:a}=P(),{token:m}=M(),[r,f]=s.useState(null),[d,h]=s.useState(null),[g,b]=s.useState(!1),[E,j]=s.useState(""),S=s.useRef(null),C=s.useRef(null),x=s.useRef(null),p=s.useRef({}),[l,T]=s.useState(null),[v,N]=s.useState(null),[O,$]=s.useState(!1),[R,L]=s.useState(!1),[A,i]=s.useState("Initializing...");s.useEffect(()=>{!a||!m||(i("Authenticating..."),z.post(`/sessions/${a}/call-token`,{},{headers:{Authorization:`Bearer ${m}`}}).then(e=>{console.log("LOG 1: Successfully received unique video token."),f(e.data.videoToken),i("Ready to start camera.")}).catch(e=>{console.error("ERROR: Failed to get video token.",e),i("Error: Authentication failed.")}))},[a,m]);const y=()=>{i("Accessing camera..."),navigator.mediaDevices.getUserMedia({video:!0,audio:!0}).then(e=>{console.log("LOG 2: Camera access granted."),T(e),C.current&&(C.current.srcObject=e),i("Camera is on. Connecting...")}).catch(e=>{console.error("ERROR: Could not access media devices.",e),i("Error: Camera not found or permission denied.")})};s.useEffect(()=>{x.current&&v&&(console.log("LOG 11: Attaching remote stream to video element."),x.current.srcObject=v,d||h(Date.now()))},[v,d]);const G=s.useCallback(e=>{j(e),S.current&&S.current.emit("notepad-change",{roomId:a,content:e})},[a]);s.useEffect(()=>{if(!r||!l)return;console.log("LOG 3: All conditions met. Initializing socket connection.");const e=q("http://localhost:5000/api",{auth:{token:r}});S.current=e,e.emit("get-notepad-content",a),e.on("notepad-content",t=>{j(t)});const k=t=>{console.log(`LOG 4: Creating peer connection for target ${t}`);const o=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}]});return o.onicecandidate=c=>{c.candidate&&(console.log(`LOG --: Sending ICE candidate to ${t}`),e.emit("ice-candidate",{target:t,candidate:c.candidate}))},o.ontrack=c=>{console.log(`LOG 10: ✅✅✅ Remote track received from ${t}!`),i("Connected!"),N(c.streams[0])},o.onconnectionstatechange=()=>{console.log(`EVENT: Connection state with ${t} is now ${o.connectionState}`),o.connectionState==="connected"&&i("Connected!"),o.connectionState==="failed"&&i("Connection failed. Please check your network and refresh.")},l.getTracks().forEach(c=>o.addTrack(c,l)),o};return e.on("connect",()=>{console.log(`LOG 5: Socket connected with ID ${e.id}. Joining room ${a}.`),e.emit("join-room",a)}),e.on("other-user",t=>{console.log(`LOG 6: 'other-user' event received. Peer ID: ${t}. Creating offer...`);const o=k(t);p.current[t]=o,o.createOffer().then(c=>o.setLocalDescription(c)).then(()=>{console.log("LOG 7: Offer created and set. Sending to peer."),e.emit("offer",{target:t,offer:o.localDescription})})}),e.on("offer",async({from:t,offer:o})=>{console.log(`LOG 6: Offer received from ${t}. Creating answer...`);const c=k(t);p.current[t]=c,await c.setRemoteDescription(new RTCSessionDescription(o));const w=await c.createAnswer();await c.setLocalDescription(w),console.log("LOG 7: Answer created and set. Sending back to peer."),e.emit("answer",{target:t,answer:w})}),e.on("answer",({from:t,answer:o})=>{console.log(`LOG 8: Answer received from ${t}. Setting remote description.`),p.current[t]?.setRemoteDescription(new RTCSessionDescription(o))}),e.on("ice-candidate",({from:t,candidate:o})=>{console.log(`LOG --: Received ICE candidate from ${t}. Adding to peer connection.`),p.current[t]?.addIceCandidate(new RTCIceCandidate(o))}),e.on("user-left",t=>{p.current[t]?.close(),delete p.current[t],N(null),i("The other user has left the call.")}),()=>{e.disconnect(),e.off("notepad-content"),Object.values(p.current).forEach(t=>t.close()),l.getTracks().forEach(t=>t.stop())}},[a,r,l]);const V=()=>{l?.getAudioTracks().forEach(e=>e.enabled=!e.enabled),$(e=>!e)},D=()=>{l?.getVideoTracks().forEach(e=>e.enabled=!e.enabled),L(e=>!e)};return n.jsxs("div",{className:`video-call-container ${u}`,children:[n.jsxs("div",{className:"flex justify-between items-center",children:[n.jsx("h1",{className:"video-call-header",children:"Video Session"}),d&&n.jsx(F,{startTime:d})]}),n.jsx("p",{className:"video-call-status",children:A}),n.jsxs("div",{className:"video-grid",style:{position:"relative",overflow:"hidden"},children:[n.jsxs("div",{className:"video-participant-container",children:[n.jsx("h2",{className:"video-participant-label",children:"Your Video"}),n.jsx("video",{ref:C,autoPlay:!0,muted:!0,playsInline:!0,className:"video-element"}),!l&&r&&n.jsx("div",{className:"start-camera-overlay",children:n.jsx("button",{onClick:y,className:"start-camera-button",children:"Start Camera"})})]}),n.jsxs("div",{className:"video-participant-container",children:[n.jsx("h2",{className:"video-participant-label",children:v?"Participant's Video":"Waiting for participant..."}),n.jsx("video",{ref:x,autoPlay:!0,playsInline:!0,className:"video-element"})]}),n.jsx(B,{isOpen:g,content:E,onContentChange:G,theme:u})]}),l&&n.jsxs("div",{className:"control-bar",children:[n.jsx("button",{onClick:V,className:`control-button ${O?"inactive":"active"}`,children:O?"Unmute":"Mute"}),n.jsx("button",{onClick:D,className:`control-button ${R?"inactive":"active"}`,children:R?"Start Video":"Stop Video"}),n.jsx("button",{onClick:()=>b(e=>!e),className:"control-button active",children:g?"Hide Notes":"Show Notes"})]})]})};export{J as default};
