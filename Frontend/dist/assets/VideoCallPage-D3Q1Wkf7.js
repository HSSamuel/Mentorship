import{j as s,i as H,f as q,u as Q,r as a,c as T,l as X}from"./index-BOyHK8Ne.js";const Z=({content:d,onContentChange:c,isOpen:u,theme:h})=>{const l=`notepad-container ${u?"open":""} ${h}`;return s.jsxs("div",{className:l,children:[s.jsx("h3",{className:"notepad-header",children:"Shared Notes"}),s.jsx("textarea",{value:d,onChange:g=>c(g.target.value),placeholder:"Type your shared notes here...",className:"notepad-textarea"})]})},ee=({transcript:d})=>s.jsxs("div",{className:"transcript-container",children:[s.jsx("h3",{className:"transcript-header",children:"Live Transcript"}),s.jsx("div",{className:"transcript-content",children:s.jsx("p",{children:d})})]}),te=({startTime:d})=>{const[c,u]=a.useState(0);a.useEffect(()=>{const j=setInterval(()=>{u(Date.now()-d)},1e3);return()=>clearInterval(j)},[d]);const h=Math.floor(c/1e3),l=Math.floor(h/60),g=h%60;let m="text-green-500";return l>=45&&(m="text-yellow-500"),l>=55&&(m="text-red-500"),s.jsxs("div",{className:`font-mono text-lg font-bold ${m}`,children:[String(l).padStart(2,"0"),":",String(g).padStart(2,"0")]})},ne=()=>{const{theme:d}=H(),{sessionId:c}=q(),{token:u,user:h}=Q(),[l,g]=a.useState(null),[m,j]=a.useState(null),[y,I]=a.useState(!1),[M,w]=a.useState(""),N=a.useRef(null),C=a.useRef(null),R=a.useRef(null),p=a.useRef({}),[r,V]=a.useState(null),[x,$]=a.useState(null),[E,_]=a.useState(!1),[A,z]=a.useState(!1),[k,i]=a.useState({message:"Initializing...",type:"info"}),L=h?.role==="MENTOR",[v,W]=a.useState(!1),[b,B]=a.useState(""),O=a.useRef(null),D=a.useRef(null);a.useEffect(()=>{!c||!u||(i({message:"Authenticating...",type:"connecting"}),T.post(`/sessions/${c}/call-token`,{},{headers:{Authorization:`Bearer ${u}`}}).then(e=>{g(e.data.videoToken),i({message:"Ready to start camera.",type:"info"})}).catch(e=>{console.error("ERROR: Failed to get video token.",e),i({message:"Error: Authentication failed.",type:"error"})}))},[c,u]);const G=()=>{i({message:"Accessing camera...",type:"connecting"}),navigator.mediaDevices.getUserMedia({video:!0,audio:!0}).then(e=>{V(e),C.current&&(C.current.srcObject=e),i({message:"Camera is on. Connecting...",type:"connecting"}),L||T.post(`/sessions/${c}/notify-call`,{},{headers:{Authorization:`Bearer ${u}`}}).catch(f=>{console.error("Could not send notification to mentor:",f)})}).catch(e=>{console.error("ERROR: Could not access media devices.",e),i({message:"Error: Camera not found or permission denied.",type:"error"})})};a.useEffect(()=>{R.current&&x&&(R.current.srcObject=x,m||j(Date.now()))},[x,m]);const Y=a.useCallback(e=>{w(e),N.current&&N.current.emit("notepad-change",{roomId:c,content:e})},[c]);a.useEffect(()=>{if(!v||!r)return;const e="YOUR_DEEPGRAM_API_KEY",f="wss://api.deepgram.com/v1/listen?encoding=linear16&sample_rate=16000&channels=1&puncutate=true&interim_results=true",t=new WebSocket(f,["token",e]);return t.onopen=()=>{console.log("Transcription socket connected.");const o=new MediaRecorder(r,{mimeType:"audio/webm"});o.ondataavailable=n=>{n.data.size>0&&t.readyState===1&&t.send(n.data)},O.current=o,o.start(250)},t.onmessage=o=>{const n=JSON.parse(o.data),S=n.channel.alternatives[0].transcript;S&&n.is_final&&B(U=>U+S+" ")},t.onclose=()=>{console.log("Transcription socket closed.")},D.current=t,()=>{O.current?.stop(),D.current?.close()}},[v,r]),a.useEffect(()=>{if(!l||!r)return;const e=X("http://localhost:5000/api",{auth:{token:l}});N.current=e,e.emit("get-notepad-content",c),e.on("notepad-content",t=>{w(t)});const f=t=>{console.log(`[WebRTC] Creating peer connection for target ${t}`);const o=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}]});return o.onicecandidate=n=>{n.candidate&&e.emit("ice-candidate",{target:t,candidate:n.candidate})},o.ontrack=n=>{console.log(`[WebRTC] Remote track received from ${t}!`),i({message:"Connected!",type:"success"}),$(n.streams[0])},o.onconnectionstatechange=()=>{switch(console.log(`[WebRTC] Connection state with ${t} is now ${o.connectionState}`),o.connectionState){case"connected":i({message:"Connection established.",type:"success"});break;case"failed":i({message:"Connection failed. Please check your network.",type:"error"});break;case"disconnected":i({message:"User disconnected.",type:"error"});break;case"closed":i({message:"Connection closed.",type:"info"});break}},r.getTracks().forEach(n=>o.addTrack(n,r)),o};return e.on("connect",()=>{console.log(`[Socket] Connected with ID ${e.id}. Joining room ${c}.`),e.emit("join-room",c)}),e.on("other-user",t=>{console.log(`[Signal] Existing user ${t} is in the room. Creating offer...`);const o=f(t);p.current[t]=o,o.createOffer().then(n=>o.setLocalDescription(n)).then(()=>{console.log(`[Signal] Offer created. Sending to ${t}.`),e.emit("offer",{target:t,offer:o.localDescription})})}),e.on("offer",async({from:t,offer:o})=>{console.log(`[Signal] Offer received from ${t}. Creating answer...`);const n=f(t);p.current[t]=n,await n.setRemoteDescription(new RTCSessionDescription(o));const S=await n.createAnswer();await n.setLocalDescription(S),console.log(`[Signal] Answer created. Sending back to ${t}.`),e.emit("answer",{target:t,answer:S})}),e.on("answer",({from:t,answer:o})=>{console.log(`[Signal] Answer received from ${t}. Setting remote description.`);const n=p.current[t];n&&n.setRemoteDescription(new RTCSessionDescription(o))}),e.on("ice-candidate",({from:t,candidate:o})=>{const n=p.current[t];n&&n.addIceCandidate(new RTCIceCandidate(o))}),e.on("user-left",t=>{console.log(`[Socket] User ${t} left the call.`),p.current[t]?.close(),delete p.current[t],$(null),i({message:"The other user has left the call.",type:"info"})}),()=>{e.disconnect(),e.off("notepad-content"),Object.values(p.current).forEach(t=>t.close()),r?.getTracks().forEach(t=>t.stop())}},[c,l,r]);const F=()=>{r?.getAudioTracks().forEach(e=>e.enabled=!e.enabled),_(e=>!e)},J=()=>{r?.getVideoTracks().forEach(e=>e.enabled=!e.enabled),z(e=>!e)},K=async()=>{if(!(!b.trim()||!c))try{await T.post(`/sessions/${c}/insights`,{transcript:b},{headers:{Authorization:`Bearer ${u}`}}),alert("Session insights have been saved!")}catch(e){console.error("Failed to save transcript and get insights:",e),alert("Could not save session insights. Please try again.")}},P=e=>{switch(e){case"success":return"status-success";case"error":return"status-error";case"connecting":return"status-connecting";default:return"status-info"}};return s.jsxs("div",{className:`video-call-container ${d}`,children:[s.jsxs("div",{className:"flex justify-between items-center",children:[s.jsx("h1",{className:"video-call-header",children:"Video Session"}),m&&s.jsx(te,{startTime:m})]}),s.jsx("p",{className:`video-call-status ${P(k.type)}`,children:k.message}),s.jsxs("div",{className:`video-main-area ${P(k.type)}`,children:[x?s.jsxs("div",{className:"split-screen-view",children:[s.jsx("div",{className:"remote-video-container",children:s.jsx("video",{ref:R,autoPlay:!0,playsInline:!0,className:"video-element"})}),s.jsx("div",{className:"local-video-container",children:s.jsx("video",{ref:C,autoPlay:!0,muted:!0,playsInline:!0,className:"video-element"})})]}):s.jsxs("div",{className:"single-camera-view",children:[s.jsx("video",{ref:C,autoPlay:!0,muted:!0,playsInline:!0,className:"video-element"}),!r&&l&&s.jsx("div",{className:"start-camera-overlay",children:s.jsx("button",{onClick:G,className:"start-camera-button",children:"Start Camera"})})]}),s.jsxs("div",{className:"sidebar-features",children:[s.jsx(Z,{isOpen:y,content:M,onContentChange:Y,theme:d}),v&&s.jsx(ee,{transcript:b})]})]}),r&&s.jsxs("div",{className:"control-bar",children:[s.jsx("button",{onClick:F,className:`control-button ${E?"inactive":"active"}`,children:E?"Unmute":"Mute"}),s.jsx("button",{onClick:J,className:`control-button ${A?"inactive":"active"}`,children:A?"Start Video":"Stop Video"}),s.jsx("button",{onClick:()=>I(e=>!e),className:"control-button active",children:y?"Hide Notes":"Show Notes"}),s.jsx("button",{onClick:()=>W(e=>!e),className:`control-button ${v?"inactive":"active"}`,children:v?"Stop Transcript":"Start Transcript"}),b&&s.jsx("button",{onClick:K,className:"control-button save-insights-button",children:"Save Insights"})]})]})};export{ne as default};
